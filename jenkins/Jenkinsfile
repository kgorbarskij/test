#!groovy
properties([disableConcurrentBuilds()])

pipeline {
  agent {
    kubernetes {
      yaml '''
        apiVersion: v1
        kind: Pod
        metadata:
          labels:
            jenkins/kube-default: true
            app: jenkins
            component: agent
        spec:
          containers:
            - name: jnlp
              image: jenkins/jnlp-agent-docker
              resources:
                limits:
                  cpu: 1
                  memory: 2Gi
                requests:
                  cpu: 1
                  memory: 2Gi
              imagePullPolicy: Always
              env:
              - name: POD_IP
                valueFrom:
                  fieldRef:
                    fieldPath: status.podIP
              - name: DOCKER_HOST
                value: tcp://localhost:2375
            - name: dind
              image: docker:18.05-dind
              securityContext:
                privileged: true
              volumeMounts:
                - name: dind-storage
                  mountPath: /var/lib/docker
          volumes:
            - name: dind-storage
              emptyDir: {}
        '''
    }
  }
    stages {
        // stage("Docker build") {
        //     steps {
        //         echo "This is a $STAGE_NAME stage " 
        //         script {
        //             GitCommit = sh(label: 'Short Git Commit', returnStdout: true, script: 'git rev-parse --short=7 HEAD').trim()
        //         }
        //         container('dind') {
        //             dir ('app'){
        //                 withCredentials([usernamePassword(credentialsId: 'kgorbarskij_dhub', usernameVariable: 'USERNAME', passwordVariable: 'PASSWORD')]) {
        //                     sh """
        //                     docker login -u $USERNAME -p $PASSWORD
        //                     docker build -t kgorbarskij/2048:$GitCommit .
        //                     docker push kgorbarskij/2048:$GitCommit
        //                     """
        //                 }    
        //             }
        //         }    
        //     }
        // }
        // stage('Test') { 
        //     steps {
        //         echo "This is a $STAGE_NAME stage " 
        //         echo "echo done :) "
        //     }
        // }    
    
        stage('Deploy') {
            steps {
                echo "This is a $STAGE_NAME stage " 
                dir ('k8s/2048'){
                  sh (script: 'ls -la')
                  agent {
                    kubernetes {
                      yaml '''
                        apiVersion: apps/v1
                        kind: Deployment
                        metadata:
                          name: "2048"
                          namespace: "2048"
                        spec:
                          replicas: 1
                          selector:
                            matchLabels:
                              app: 2048-app
                          template:
                            metadata:
                              labels:
                                app: 2048-app
                            spec:
                              containers:
                                - name: "2048"
                                  image: kgorbarskij/2048:bf10553
                                  ports:
                                    - name: httpport
                                      containerPort: 3000
                                  volumeMounts:
                                    - name: 2048-data
                                      mountPath: /tmp
                              volumes:
                                - name: 2048-data
                                  persistentVolumeClaim:
                                    claimName: 2048-pv-claim
                        '''
                    }  
                  }
                }
            }
        }
    }
}