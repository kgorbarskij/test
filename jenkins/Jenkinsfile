#!groovy
// Run docker build
properties([disableConcurrentBuilds()])

pipeline {
  agent {
    kubernetes {
      yaml '''
        apiVersion: v1 
        kind: Pod 
        metadata: 
            name: dood 
        spec: 
            containers: 
              - name: docker-cmds 
                image: docker:latest 
                command: ['docker', 'run', '-p', '80:80', 'httpd:latest'] 
                resources: 
                    requests: 
                        cpu: 10m 
                        memory: 256Mi 
                volumeMounts: 
                  - mountPath: /var/run 
                    name: docker-sock 
            volumes: 
              - name: docker-sock 
                hostPath: 
                    path: /var/run  
        '''
    }
  }
    stages {
        stage("docker login") {
            steps {
                container('dind') {
                    echo " ============== docker build =================="
                    dir ('app'){
                        withCredentials([usernamePassword(credentialsId: 'kgorbarskij_dhub', usernameVariable: 'USERNAME', passwordVariable: 'PASSWORD')]) {
                            sh """
                            ls -la
                            docker login -u $USERNAME -p $PASSWORD
                            docker build -t kgorbarskij/2048:latest .
                            docker push kgorbarskij/2048:latest
                            """
                        }    
                    }
                }    
            }
        }
        // stage("create docker image") {
        //     steps {
        //         container('dind') {
        //             echo " ============== start building image =================="
        //             dir ('app') {
        //                 sh 'docker build -t kgorbarskij/2048:latest . '
        //             }
        //         }
        //     }
        // }
        // stage("docker push") {
        //     steps {
        //         container('dind') {
        //             echo " ============== start pushing image =================="
        //             sh '''
        //             docker push kgorbarskij/2048:latest
        //             '''
        //         }
        //     }
        // }
    }
}